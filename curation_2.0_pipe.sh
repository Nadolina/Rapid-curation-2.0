#!/bin/sh 

fasta=""
agpfile=""
hap=1

## Programs/tools
use_gfastats=/vggpfs/fs3/vgl/store/nbrajuka/gfastats/build/bin/gfastats
use_seqkit=/vggpfs/fs3/vgl/store/nbrajuka/conda/envs/statistics/bin/seqkit
use_vsearch=/vggpfs/fs3/vgl/store/nbrajuka/conda/envs/curation/bin/vsearch
printf "Dependecies:\n"
printf "Biopython v1.81\n"
$use_gfastats -v


Help()
{
    # Display help

    echo "Command: sh curation_2.0_pipe.sh -f <original fasta> -a <agp> <options>"
    echo "-h Prints help."
    echo "-f Pass original fasta file with combined haplotypes."
    echo "-a Pass the agp generated by PretextView."
    echo "-p Pass the primary assembly you curated (1 for haplotype 1 (default), 2 for haplotype 2)."
}

while getopts ":hf:a:p:" option; do
    case $option in 
        h) #display Help
            Help
            exit;;
        f) #Pass original fasta file 
            fasta=$OPTARG;;
        a) #Pass Pretext generated AGP file of curated assembly
            agpfile=$OPTARG;;
        p) #Pass haplotype of interest ()
            hap=$OPTARG
    esac
done


printf "Original assembly: ${fasta}\n" ### but checks/breakpoints for if these aren't provided.
printf "PretextView generated AGP: ${agpfile}\n"

##agpcorr_file=`echo $agpfile | sed 's/agp/corrected.agp/g'` I don't think this is in use. 

## TO-DO: modify agpcorrect.py to output to a file rather than to stdout
python3 AGPcorrect.py ${fasta} ${agpfile}

cur_fasta=`echo $fasta | sed 's/fasta/curated.fasta/g'`
touch $cur_fasta
## left off here - gfastats accepts piped input or no? otherwise I will just use seqkit 
## or try to order the agp in advance to reduce dependencies (doesn't make too much of a difference )
## can this output to a new agp and then be projected?
echo "${use_gfastats} ${fasta} --agp-to-path corrected.agp -o corrected.fasta"
## WE GOTTA SPLIT THE HAPS BOO - this is what the p arg is for. 
${use_gfastats} ${fasta} --agp-to-path corrected.agp -ofa | \ 
    grep -E '#|Painted|proximity_ligation|H2.' 

    


